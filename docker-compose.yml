version: '3'
services:
  redis:
    image: "redis:5.0.1-alpine"
    ports:
      - "6379:6379"
  postgres:
    container_name: "postgres"
    image: "postgres:11.1-alpine"
    ports:
      - "5432:5432"
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    container_name: elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.graph.enabled=false
      - xpack.ml.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - "discovery.type=single-node"
      - TAKE_FILE_OWNERSHIP=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.1
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elastic
  backend:
    container_name: "Backend"
    links:
      - postgres
      - redis
      - elastic
    build:
      context: backend/applications/server
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgres://postgres@postgres/postgres
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=elastic:9200
  frontend:
    container_name: "Frontend"
    links:
      - backend
    build:
      dockerfile: Dockerfile
      context: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production